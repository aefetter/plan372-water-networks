"0","# function from network analysis in class"
"0","sf_to_tidygraph = function(x, directed = TRUE) {"
"0","  "
"0","  edges <- x %>%"
"0","    mutate(edgeID = c(1:nrow(.)))  # Ensure edgeID is created correctly"
"0","  "
"0","  nodes <- edges %>%"
"0","    st_coordinates() %>%"
"0","    as_tibble() %>%"
"0","    rename(edgeID = L1) %>%"
"0","    group_by(edgeID) %>%"
"0","    slice(c(1, n())) %>%"
"0","    ungroup() %>%"
"0","    mutate(start_end = rep(c('start', 'end'), times = n()/2)) %>%"
"0","    mutate(xy = paste(.$X, .$Y)) %>% "
"0","    mutate(nodeID = group_indices(., factor(xy, levels = unique(xy)))) %>%"
"0","    select(-xy)"
"0","  "
"0","  source_nodes <- nodes %>%"
"0","    filter(start_end == 'start') %>%"
"0","    pull(nodeID)"
"0","  target_nodes <- nodes %>%"
"0","    filter(start_end == 'end') %>%"
"0","    pull(nodeID)"
"0","  edges <- edges %>%"
"0","    mutate(from = source_nodes, to = target_nodes)"
"0","  "
"0","  nodes <- nodes %>%"
"0","    distinct(nodeID, .keep_all = TRUE) %>%"
"0","    select(-c(edgeID, start_end)) %>%"
"0","    st_as_sf(coords = c('X', 'Y')) %>%"
"0","    st_set_crs(st_crs(edges))"
"0","  "
"0","  # Ensure geometry is preserved in edges"
"0","  edges <- edges %>%"
"0","    as_tibble() %>%"
"0","    mutate(geometry = st_geometry(x))  # Add geometry column"
"0","  "
"0","  tbl_graph(nodes = nodes, edges = edges, directed = directed)"
"0","}"
